name: CI/CD Helm Deployment

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: disidesh/signiance
  IMAGE_TAG: latest
  RELEASE_NAME: signiance-app

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        working-directory: ./app
        run: npm install

      - name: Run tests
        working-directory: ./app
        run: npm test || echo "No tests defined"

      - name: Lint code
        working-directory: ./app
        run: npm run lint || echo "No lint script defined"

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t $IMAGE_NAME:$IMAGE_TAG ./app

      - name: Push Docker image
        run: docker push $IMAGE_NAME:$IMAGE_TAG

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'

      - name: Configure kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Deploy using Helm
        run: |
          helm upgrade --install $RELEASE_NAME ./helm \
            --set image.repository=$IMAGE_NAME \
            --set image.tag=$IMAGE_TAG \
            --atomic \
            --wait \
            --timeout 5m
